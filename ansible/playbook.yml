---
- name: Instalar e configurar Docker em Amazon Linux
  hosts: aws_ec2
  become: true
  tasks:
    - name: Atualizar cache do yum
      yum:
        update_cache: yes

    - name: Instalar depend√™ncias Docker
      yum:
        name:
          - yum-utils
          - device-mapper-persistent-data
          - lvm2
        state: present

    - name: Instalar Docker via Amazon Linux Extras
      shell: amazon-linux-extras install docker -y
      args:
        creates: /usr/bin/docker

    - name: Ativar e iniciar servi√ßo Docker
      service:
        name: docker
        state: started
        enabled: yes

    - name: Criar diret√≥rio de CLI plugins para Docker Compose
      file:
        path: "/root/.docker/cli-plugins"
        state: directory
        mode: "0755"

    - name: Baixar e instalar Docker Compose v2 (CLI plugin)
      shell: |
        # Instala Docker Compose v2 como plugin CLI
        DOCKER_COMPOSE_VERSION=$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep '"tag_name":' | cut -d'"' -f4)
        curl -L "https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /root/.docker/cli-plugins/docker-compose
        chmod +x /root/.docker/cli-plugins/docker-compose

        # Tamb√©m cria link simb√≥lico para compatibilidade
        ln -sf /root/.docker/cli-plugins/docker-compose /usr/local/bin/docker-compose
      args:
        creates: /root/.docker/cli-plugins/docker-compose

    - name: Validar instala√ß√£o do Docker Compose
      file:
        path: "/root/.docker/cli-plugins/docker-compose"
        mode: "0755"
        state: file

    - name: Verificar vers√£o do Docker Compose
      shell: docker compose version
      register: docker_compose_version

    - name: Mostrar vers√£o do Docker Compose
      debug:
        msg: "Docker Compose instalado: {{ docker_compose_version.stdout }}"

    - name: Adicionar usu√°rio ao grupo docker
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Criar arquivo de valida√ß√£o
      copy:
        dest: "/home/{{ ansible_user }}/validation_ansible.txt"
        content: "Ansible executado com sucesso em {{ ansible_date_time.date }} {{ ansible_date_time.time }}\n"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0644"

- name: Deploy Container via Docker Compose
  hosts: aws_ec2
  become: true
  vars:
    project_path: "/home/{{ ansible_user }}/server"
    # Usa a imagem passada via extra-vars ou fallback para uma padr√£o
    container_image: "{{ docker_image | default('ghcr.io/pedrobarros3421/terraform_ansible_ec2_application/server:latest') }}"
    container_name: events-api
  tasks:
    - name: Criar diret√≥rio do projeto
      file:
        path: "{{ project_path }}"
        state: directory
        mode: "0755"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Criar diret√≥rio de monitoramento
      file:
        path: "{{ project_path }}/monitoring"
        state: directory
        mode: "0755"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Copiar arquivo docker-compose.yml
      copy:
        src: docker-compose-server.yml
        dest: "{{ project_path }}/docker-compose.yml"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0644"

    - name: Criar diret√≥rio do Prometheus
      file:
        path: "{{ project_path }}/monitoring/prometheus"
        state: directory
        mode: "0755"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Copiar configura√ß√£o do Prometheus
      copy:
        src: "{{ playbook_dir }}/../prometheus/prometheus.yml"
        dest: "{{ project_path }}/monitoring/prometheus/prometheus.yml"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0644"

    - name: Copiar regras de alerta do Prometheus
      copy:
        src: "{{ playbook_dir }}/../prometheus/alert.rules"
        dest: "{{ project_path }}/monitoring/prometheus/alert.rules"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0644"

    - name: Criar diret√≥rio do Alertmanager
      file:
        path: "{{ project_path }}/monitoring/alertmanager"
        state: directory
        mode: "0755"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Copiar configura√ß√£o do Alertmanager
      copy:
        src: "{{ playbook_dir }}/../alertmanager/alertmanager.yml"
        dest: "{{ project_path }}/monitoring/alertmanager/alertmanager.yml"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0644"

    - name: Criar diret√≥rio do Grafana
      file:
        path: "{{ project_path }}/monitoring/grafana"
        state: directory
        mode: "0755"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Criar diret√≥rio de dashboards do Grafana
      file:
        path: "{{ project_path }}/monitoring/grafana/dashboards"
        state: directory
        mode: "0755"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Criar diret√≥rio de datasources do Grafana
      file:
        path: "{{ project_path }}/monitoring/grafana/provisioning/datasources"
        state: directory
        mode: "0755"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Copiar dashboard do Grafana
      copy:
        src: "{{ playbook_dir }}/../grafana/dashboards/events-api-dashboard.json"
        dest: "{{ project_path }}/monitoring/grafana/dashboards/events-api-dashboard.json"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0644"

    - name: Copiar datasource do Grafana
      copy:
        src: "{{ playbook_dir }}/../grafana/provisioning/datasources/prometheus.yml"
        dest: "{{ project_path }}/monitoring/grafana/provisioning/datasources/prometheus.yml"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0644"

    - name: Garantir permiss√µes de acesso e execu√ß√£o em /usr/src/app/
      file:
        path: /usr/src/app/
        state: directory
        mode: "0755"
        recurse: yes
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Garantir permiss√µes de acesso e execu√ß√£o em /home/ec2-user/server
      file:
        path: "{{ project_path }}"
        state: directory
        mode: "0755"
        recurse: yes
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Parar e remover container existente
      shell: docker compose down
      args:
        chdir: "{{ project_path }}"
      environment:
        DOCKER_IMAGE: "{{ container_image }}"
      ignore_errors: true

    - name: Baixa a imagem via Docker Compose
      shell: docker compose pull
      args:
        chdir: "{{ project_path }}"
      environment:
        DOCKER_IMAGE: "{{ container_image }}"

    - name: Subir container via Docker Compose v2
      shell: docker compose up -d
      args:
        chdir: "{{ project_path }}"
      environment:
        DOCKER_IMAGE: "{{ container_image }}"

    - name: Verificar status dos containers
      shell: docker compose ps
      args:
        chdir: "{{ project_path }}"
      register: container_status

    - name: Mostrar status dos containers
      debug:
        msg: "{{ container_status.stdout }}"

    - name: Aguardar aplica√ß√£o ficar dispon√≠vel
      uri:
        url: "http://localhost:2424/docs"
        method: GET
        status_code: 200
      retries: 10
      delay: 30
      register: health_check
      until: health_check.status == 200

    - name: Aguardar Prometheus ficar dispon√≠vel
      uri:
        url: "http://localhost:9090/-/healthy"
        method: GET
        status_code: 200
      retries: 10
      delay: 30
      register: prometheus_health
      until: prometheus_health.status == 200

    - name: Aguardar Grafana ficar dispon√≠vel
      uri:
        url: "http://localhost:3000/api/health"
        method: GET
        status_code: 200
      retries: 10
      delay: 30
      register: grafana_health
      until: grafana_health.status == 200

    - name: Mostrar URLs de monitoramento
      debug:
        msg: |
          üéâ Deploy conclu√≠do com sucesso!

          üìä URLs de Monitoramento:
          - API: http://{{ ansible_host }}:2424/docs
          - Prometheus: http://{{ ansible_host }}:9090
          - Grafana: http://{{ ansible_host }}:3000 (admin/admin123)
          - Alertmanager: http://{{ ansible_host }}:9093
          - Node Exporter: http://{{ ansible_host }}:9100
